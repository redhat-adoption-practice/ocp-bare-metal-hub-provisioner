# Note this file mostly matches the isolinux.cfg file from the Fedora 
# Server DVD iso. Diff this file with that file in the future to pick up
# changes.
serial 0
default linux
timeout 10

display boot.msg

# Clear the screen when exiting the menu, instead of leaving the menu displayed.
# For vesamenu, this means the graphical background is still displayed without
# the menu itself for as long as the screen remains in graphics mode.
menu clear
menu background splash.png
menu title RHEL CoreOS Installer 
menu vshift 8
menu rows 18
menu margin 8
#menu hidden
menu helpmsgrow 15
menu tabmsgrow 13

# Border Area
menu color border * #00000000 #00000000 none

# Selected item
menu color sel 0 #ffffffff #00000000 none

# Title bar
menu color title 0 #ff7ba3d0 #00000000 none

# Press [Tab] message
menu color tabmsg 0 #ff3a6496 #00000000 none

# Unselected menu item
menu color unsel 0 #84b8ffff #00000000 none

# Selected hotkey
menu color hotsel 0 #84b8ffff #00000000 none

# Unselected hotkey
menu color hotkey 0 #ffffffff #00000000 none

# Help text
menu color help 0 #ffffffff #00000000 none

# A scrollbar of some type? Not sure.
menu color scrollbar 0 #ffffffff #ff355594 none

# Timeout msg
menu color timeout 0 #ffffffff #00000000 none
menu color timeout_msg 0 #ffffffff #00000000 none

# Command prompt text
menu color cmdmark 0 #84b8ffff #00000000 none
menu color cmdline 0 #ffffffff #00000000 none

# Do not display the actual menu unless the user presses a key. All that is displayed is a timeout message.

menu tabmsg Press Tab for full configuration options on menu items.

menu separator # insert an empty line
menu separator # insert an empty line

label linux
  menu label ^Install RHEL CoreOS on {{inventory_hostname}}
  kernel /images/vmlinuz
{% if hostvars['localhost'].get('additional_ignition', []) %}
  initrd /images/initramfs.img,/images/ignition.initrd
{% else %}
  initrd /images/initramfs.img
{% endif %}
{% if pm_type == 'vmware' %}
  append nomodeset rd.neednet=1 console=tty0 ignition.firstboot ignition.platform.id=metal coreos.inst=yes coreos.inst.install_dev={{hostvars[inventory_hostname].deploy_disk}} coreos.live.rootfs_url={{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/rhcos-rootfs.img coreos.inst.ignition_url={% if transpile_nic_configs %}{{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/{{short_name}}.ign{% else %}{{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/{{hostvars[inventory_hostname].role}}.ign{% endif %} bootdev={{hostvars[inventory_hostname].boot_if}}{% for bond in hostvars[inventory_hostname].bonds %} bond={{bond.name}}:{{bond.interfaces|join(',')}}:{{bond.options}}{% endfor %}{% for interface in hostvars[inventory_hostname].interfaces %} ip={{interface.ip_address}}::{{interface.get('gateway', '')}}:{{interface.ip_netmask}}:{% if 'gateway' in interface %}{{inventory_hostname}}{% endif %}:{{interface.name}}:none{% if fallback_dns %}:{{fallback_dns}}{% endif %}{% endfor %}{% for interface in hostvars[inventory_hostname].get('disabled_interfaces', []) %} ip={{interface}}:none{% endfor %}{% for ns in hostvars[inventory_hostname].nameservers %} nameserver={{ns}} {% endfor %}
{% else %}
  append nomodeset rd.neednet=1 console=tty0 ignition.firstboot ignition.platform.id=metal coreos.inst=yes coreos.inst.install_dev={{hostvars[inventory_hostname].deploy_disk}} coreos.live.rootfs_url={{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/rhcos-rootfs.img coreos.inst.ignition_url={% if transpile_nic_configs %}{{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/{{short_name}}.ign{% else %}{{utility_http_scheme}}://{{utility_host}}:{{utility_http_port}}/{{cluster_name}}/{{hostvars[inventory_hostname].role}}.ign{% endif %} bootdev={{hostvars[inventory_hostname].boot_if}} {% for bond in hostvars[inventory_hostname].bonds %} bond={{bond.name}}:{{bond.interfaces|join(',')}}:{{bond.options}}{% endfor %}{% for vlan in hostvars[inventory_hostname].vlans %} vlan={{vlan.device}}.{{vlan.tag}}:{{vlan.device}}{% endfor %}{% for interface in hostvars[inventory_hostname].interfaces %} ip={{interface.ip_address}}::{{interface.get('gateway', '')}}:{{interface.ip_netmask}}:{% if 'gateway' in interface %}{{inventory_hostname}}{% endif %}:{{interface.name}}:none{% if fallback_dns %}:{{fallback_dns}}{% endif %}{% endfor %}{% for interface in hostvars[inventory_hostname].get('disabled_interfaces',[]) %} ip={{interface}}:none{% endfor %}{% for ns in hostvars[inventory_hostname].nameservers %} nameserver={{ns}} {% endfor %}
{% endif %}

menu separator # insert an empty line

menu end
