---
- name: Install Mirror Registry for Red Hat OpenShift
  hosts: provisioner
  # become: true
  vars:
    # Define your variables for the mirror registry
    mirror_registry_bin_dir: "/tmp/mirror-registry"
    mirror_registry_tar: "{{ mirror_registry_bin_dir }}/mirror-registry.tar.gz"
    quay_hostname: "registry.example.com"
    quay_root: "/opt/mirror-registry"
    quay_installer_owner: lab-user
    quay_installer_group: users
    required_containers:
      - quay-app
      - quay-redis
      - .*-infra

  tasks:
    - name: Gather all running containers
      ansible.builtin.command:
        cmd: "podman ps --format '{{ '{{.Names}}' }}'"
      register: running_containers
      changed_when: false
      failed_when: running_containers.rc != 0
      ignore_errors: true

    - name: Debug list of running containers
      ansible.builtin.debug:
        msg: "Running containers: {{ running_containers.stdout_lines }}"
        verbosity: 3

    - name: Filter the running containers to match the required ones
      ansible.builtin.set_fact:
        matched_running_containers: "{{ running_containers.stdout_lines | select('search', item) | list }}"
      loop: "{{ required_containers }}"
      loop_control:
        label: "{{ item }}"

    - name: Initialize the list for matched running containers
      ansible.builtin.set_fact:
        matched_running_containers: []

    - name: Filter the running containers to match the required ones
      ansible.builtin.set_fact:
        matched_running_containers: "{{ matched_running_containers + running_containers.stdout_lines | select('search', item) | list }}"
      loop: "{{ required_containers }}"
      loop_control:
        label: "{{ item }}"

    - name: Debug list of matched running containers
      ansible.builtin.debug:
        msg: "Matched Running containers: {{ matched_running_containers }}"
        verbosity: 3

    - name: Filter for infra container in matched running containers
      ansible.builtin.set_fact:
        has_infra_container: "{{ matched_running_containers | select('search', '.*-infra') | list | length > 0 }}"

    - name: Debug matched running containers
      ansible.builtin.debug:
        var: has_infra_container
        verbosity: 3

    - name: Validate if all required containers are running
      ansible.builtin.set_fact:
        all_containers_running: >-
          {{
            required_containers[:-1] | difference(matched_running_containers) | length == 0
            and (matched_running_containers | select('search', '.*-infra') | list | length > 0)
          }}

    - name: Debug matched running containers
      ansible.builtin.debug:
        var: all_containers_running
        verbosity: 3

    - name: Skip mirror registry installation if containers are running
      ansible.builtin.debug:
        msg: "All required containers are running, skipping installation. {{ all_containers_running }}"
      when: all_containers_running
      changed_when: false

    - name: Block - Install mirror-registry
      block:
        - name: Create directory {{ quay_root }}
          become: true
          ansible.builtin.file:
            dest: "{{ quay_root }}"
            state: directory
            mode: "0755"
            owner: "{{ quay_installer_owner }}"
            group: "{{ quay_installer_group }}"

        - name: Create directory {{ mirror_registry_bin_dir }}
          become: true
          ansible.builtin.file:
            dest: "{{ mirror_registry_bin_dir }}"
            state: directory
            mode: "0755"
            owner: "{{ quay_installer_owner }}"
            group: "{{ quay_installer_group }}"

        - name: Download the mirror registry package
          ansible.builtin.get_url:
            url: "{{ source_urls['mirror_registry'] }}"
            dest: "{{ mirror_registry_tar }}"
            mode: '0644'

        - name: Extract the mirror registry package
          ansible.builtin.unarchive:
            src: "{{ mirror_registry_tar }}"
            dest: "{{ mirror_registry_bin_dir }}"
            remote_src: no
            creates: "{{ mirror_registry_bin_dir }}/mirror-registry"
            mode: '0755'

        - name: Run the mirror-registry install command
          ansible.builtin.command:
            cmd: >
              ./mirror-registry install
              --quayRoot {{ quay_root | default('~/quay-install')}}
              --initUser "{{ quay_user | default('init') }}"
              {% if quay_password is defined and quay_password != '' %}
              --initPassword "{{ quay_password }}"
              {% endif %}
              --targetHostname "{{ quay_target_hostname | default(lookup('env', 'HOST')) }}"
              --targetUsername "{{ quay_target_username | default(lookup('env', 'USER')) }}"
              {% if quay_ssh_key_path is defined and quay_ssh_key_path != '' %}
              --ssh-key "{{ quay_ssh_key_path }}"
              {% endif %}
              {% if quay_ssl_cert is defined and quay_ssl_cert != '' %}
              --sslCert "{{ quay_ssl_cert }}"
              {% endif %}
              {% if quay_ssl_key is defined and quay_ssl_key != '' %}
              --sslKey "{{ quay_ssl_key }}"
              {% endif %}
              {% if quay_installer_additional_args is defined and quay_installer_additional_args != '' %}
              --additionalArgs "{{ quay_installer_additional_args }}"
              {% endif %}
              -v
            chdir: "{{ mirror_registry_bin_dir }}"
      when: not all_containers_running

      rescue:
        - name: Print when errors
          ansible.builtin.debug:
            msg: 'I caught an error, can do stuff here to fix it, :-)'

      always:
        - name: Always do this
          ansible.builtin.debug:
            msg: "This always executes, :-)"


    - name: Log in to the mirror registry using Podman
      containers.podman.podman_login:
        username: "{{ quay_user | default('init') }}"
        password: "{{ quay_password | default('password')}}"
        registry: "{{ quay_hostname }}:8443"
        tlsverify: false
      when: quay_hostname is defined

    - name: Debug - Quay hostname and login info
      ansible.builtin.debug:
        msg: "Login to the registry at https://{{ quay_hostname }}:{{ port }} with the username 'init' and the provided password."

    - name: Provide next steps for the user
      ansible.builtin.debug:
        msg: |
          To continue, you can now mirror OpenShift Container Platform images.
          Use 'podman login' to log in to the registry if needed.
          More info: See the 'Mirroring OpenShift Container Platform images' or 'Mirroring Operator catalogs' documentation.
